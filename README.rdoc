= tinymce_hammer

tinymce_hammer's purpose is to simplify using TinyMCE with a Rails application.
TinyMCE is a WYSIWYG html text editor for the web. 

== Why Use tinymce_hammer

The standard and simple methods for loading tiny are ugly and slow (my
opinion).  TinyMCE loads each js file it requires via XMLHttpRequest, one at a 
time.  

* A simple editor with a few plugins can easily require 15 different js files!
* XMLHttpRequest doesn't cache the files, so it must refetch after each refresh
* It's *slow*

To address this, this plugin combines all of the following js files into one
file and caches that file to disk:

* tiny mce
* plugin files
* theme files
* language files (for tiny mce and all loaded plugins)

On top of combining javascript files, tinymce_hammer also provides a few
helpers to make it easy to load this combined file when the current page
requires a TinyMCE editor.

== Installation

1) Install this plugin into vendor/plugins/tinymce_hammer
2) Install TinyMCE somwhere inside public/ (the default location is assumed to
   be RAILS_ROOT/public/javascript/tiny_mce).

   Get TinyMCE here: http://tinymce.moxiecode.com/download.php

== Basic Usage

The simplest method to you TinyMCE is to use one of the view helpers that
wrap the most basic textfield.

=== Example 1: tinymce_tag (form tag helper)

This is your basic drop-in replacement for text_area_tag:

  <%= tinymce_tag('comment[body]', 'Your comment goes here ...') %>

=== Example 2: tinymce (form helper)

This is just like the text_area helper, it assumes there is an instance
variable, and if found will pull data from that to populate the field with.

  <%= tinymce(:comment, :body) %>

=== Example 3: tinymce (form builder helepr)

  <%- form_for @comment do |form| -%>
    <%= form.label :body %>
    <%= form.tinymce :body %>
  <% end %>

== Advanced Usage

The basic usage examples above are great for getting a text editor up and 
runningly quickly.  You may find yourself needing more then those helpers
provide.  Some possible reasons for wanting a more advanced configuration:
You maybe:

* only want the combined javascript TinyMCE file provided by tinymce_hammer
* require multiple editors on the same page that are configured differently
* need to register javascript callbacks with TinyMCE

== Plugin Configuration

You need to tell tinymce_hammer what plugins, languages and theme files you 
require.  The TinyMCE primary library and all of the configured language,
theme and plugin files (and their language files) are combined into a single
javascript file and cached to disk.

NOTE: Some plugins and themes have their own language files.  These language
files are auto combined as well for each language you configure.

Valid configuration options (and their defaults) are:

  * install_path - '/javascripts/tiny_mce'
  * plugins      - ['paste']
  * languages    - ['en']
  * themes       - ['advanced']

NOTE: install_path is assumed to be rooted in RAILS_ROOT/public.

Here is a sample configuration file:

  Tinymce::Hammer.install_path = '/javascripts/lib/tiny_mce'
  Tinymce::Hammer.plugins = %w(safari table paste paste2 tabfocus)
  Tinymce::Hammer.languages = %w(en es)










To enable TinyMCE editing you must do 2 things:

1) Load the tinymce_hammer combined javscript file
2) Initialize TinyMCE
